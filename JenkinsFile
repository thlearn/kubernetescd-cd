node{
  
  try{
  stage('Checkout'){
      checkout scm
        }
  stage('compile'){
        sh "mvn clean install"
       }
  stage('Docker Build, Push'){   
           withDockerRegistry(credentialsId: 'docker') {
	     sh "docker  build -t  hareshdocker/eksdemotomcat:$BUILD_NUMBER ."
             sh "docker  push  hareshdocker/eksdemotomcat:$BUILD_NUMBER"
       }
     } 
     
  stage('Scan docker Image'){   
          sh 'echo "hareshdocker/eksdemotomcat:$BUILD_NUMBER `pwd`/Dockerfile" > anchore_images'
          anchore name: 'anchore_images'
     }    
   
  stage("Deploy to Kubernetes"){
          sh "sed -i 's/BUILD_NUMBER/$BUILD_NUMBER/g' k8s/deployment.yml"
	  if (env.BRANCH_NAME == 'master') {
            sh 'kubectl config use-context eks-user@cluster-dev.us-east-1.eksctl.io'
           } else {
            sh 'kubectl config use-context eks-user@cluster-dev.us-east-1.eksctl.io'
          }
	  sh "kubectl apply -f k8s/deployment.yml"
	  sh "kubectl apply -f k8s/nodeportsvc.yml"
	  
      
  }

 	 }catch (err) {
      currentBuild.result = 'FAILURE'
    }
}

